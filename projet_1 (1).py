# -*- coding: utf-8 -*-
"""projet_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g9-MUcd6q6ro_AdvJukFR_Q_j4hx6wWK
"""

import matplotlib.pyplot as plt

import numpy as np

# Demande des valeurs a l'utilisateur
R=float(input('Entrez la valeur de la resistance'))  # en ohms
C=float(input('Entrez la valeur du condensateur'))   # en farads
E=float(input('Entrez la valeur de la source'))  # en volts
duree=float(input('Entrez la duree de la simulation'))  # en seconde

pas=0.001

t=np.arange(0,duree,pas)

Uc=E*(1-np.exp(-t/(R*C)))

plt.plot(t,Uc)
plt.xlabel('Temps(s)')
plt.ylabel('Tension aux bornes du condensateur')
plt.title('charge du condensateur')
plt.grid(True)
plt.savefig('fig1')
plt.show()

# Demande des valeurs a l'utilisateur
R=float(input('Entrez la valeur de la resistance'))  # en ohms
C=float(input('Entrez la valeur du condensateur'))   # en farads
E=float(input('Entrez la valeur de la source'))  # en volts
duree=float(input('Entrez la duree de la simulation'))  # en seconde

pas=0.001

t=np.arange(0,duree,pas)

Uc=E*np.exp(-t/(R*C))

plt.plot(t,Uc)
plt.xlabel('Temps(s)')
plt.ylabel('Tension aux bornes du condensateur')
plt.title('Decharge du condensateur')
plt.grid(True)
plt.savefig('fig2')
plt.show()